package otfalign

import (
	"github.com/nsip/otf-align/internal/util"
)

type Option func(*OtfAlignService) error

//
// apply all supplied options to the service
// returns any error encountered while applying the options
//
func (srvc *OtfAlignService) setOptions(options ...Option) error {
	for _, opt := range options {
		if err := opt(srvc); err != nil {
			return err
		}
	}
	return nil
}

//
// set the name of this instance of the service
// used for audit tracing purposes if multiple
// instances of the service are active.
// If no name provided a hashid-style unique
// short name will be generated
//
func Name(name string) Option {
	return func(s *OtfAlignService) error {
		if name != "" {
			s.serviceName = name
			return nil
		}
		s.serviceName = util.GenerateName()
		return nil
	}
}

//
// create a unique id for this service instance, if none
// provided a nuid will be generated by default
//
func ID(id string) Option {
	return func(s *OtfAlignService) error {
		if id != "" {
			s.serviceID = id
			return nil
		}
		s.serviceID = util.GenerateID()
		return nil
	}
}
